{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","required","onChange","useState","Math","random","toString","slice","id","touched","setToched","textareaValue","setTextareaValue","hasError","isNeedPattern","toLowerCase","includes","htmlFor","pattern","undefined","classNames","type","placeholder","event","target","onBlur","NewMovie","onAdd","count","setCount","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","disabled","onSubmit","e","preventDefault","App","moviesFromServer","setMovies","newMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9cc4d54c.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  onChange = () => { },\n}) => {\n  // generage a unique id once on component load\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  // To show errors only if the field was touched (onBlur)\n  const [touched, setToched] = useState(false);\n  const [textareaValue, setTextareaValue] = useState(value);\n  const hasError = touched && required && !textareaValue;\n\n  const isNeedPattern = name.toLowerCase().includes('url');\n  // eslint-disable-next-line max-len, no-useless-escape\n  const pattern = '/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A - Za - z0 - 9. -] +| (?: www\\.| [-;:&=+$, \\w]+@)[A - Za - z0 - 9. -] +) ((?: \\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/';\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          pattern={isNeedPattern ? pattern : undefined}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={textareaValue}\n          onChange={event => {\n            setTextareaValue(event.target.value);\n            onChange((event.target.value));\n          }}\n          onBlur={() => setToched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { Movie } from '../../types/Movie';\nimport { TextField } from '../TextField';\n\ntype Props = {\n  onAdd: (movie:Movie) => void,\n};\n\nexport const NewMovie: React.FC <Props> = ({ onAdd }) => {\n  // Increase the count after successful form submission\n  // to reset touched status of all the `Field`s\n  const [count, setCount] = useState(0);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n\n  const isRequired = title && imgUrl && imdbUrl && imdbId;\n  const disabled = !isRequired;\n\n  const reset = () => {\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  };\n\n  const submitHandler = (e:React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setCount(count + 1);\n    onAdd({\n      title, description, imgUrl, imdbUrl, imdbId,\n    });\n    reset();\n  };\n\n  return (\n    <form className=\"NewMovie\" key={count} onSubmit={submitHandler}>\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={setTitle}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={setDescription}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={setImgUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={setImdbUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={setImdbId}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={disabled}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n  const addNewMovie = ({\n    title, description, imgUrl, imdbUrl, imdbId,\n  }: Movie) => {\n    const newMovie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    setMovies([...movies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addNewMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}